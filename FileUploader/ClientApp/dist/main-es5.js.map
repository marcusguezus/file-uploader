{"version":3,"sources":["src/app/app.component.html","src/app/counter/counter.component.html","src/app/fetch-data/fetch-data.component.html","src/app/file-upload/file-upload.component.html","src/app/home/home.component.html","src/app/nav-menu/nav-menu.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/counter/counter.component.ts","src/app/fetch-data/fetch-data.component.ts","src/app/file-upload/file-upload.component.css","src/app/file-upload/file-upload.component.ts","src/app/home/home.component.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<div class=\\\"row\\\" style=\\\"margin-bottom: 15px;\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <input type=\\\"file\\\" #file placeholder=\\\"Choose file\\\" (change)=\\\"uploadFile(file.files)\\\" style=\\\"display: none\\\" />\\r\\n        <button type=\\\"button\\\" class=\\\"btn-primary btn-success\\\" (click)=\\\"file.click()\\\">Upload File</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <span class=\\\"upload\\\" *ngIf=\\\"progress > 0\\\">\\r\\n            {{progress}}%\\r\\n        </span>\\r\\n        <span class=\\\"upload\\\" *ngIf=\\\"message\\\">\\r\\n            {{message}}\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\"","export default \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">FileUploader</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <!--<li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>-->\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\n\r\nimport { FileUploadComponent } from './file-upload/file-upload.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        FileUploadComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot([\r\n            { path: '', component: FileUploadComponent, pathMatch: 'full' },\r\n            { path: 'counter', component: CounterComponent },\r\n            { path: 'fetch-data', component: FetchDataComponent },\r\n            { path: 'upload', component: FileUploadComponent },\r\n        ])\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","export default \".upload {\\r\\n    font-weight: bold;\\r\\n    color: #28a745;\\r\\n    margin-left: 15px;\\r\\n    line-height: 36px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlsZS11cGxvYWQvZmlsZS11cGxvYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICMyOGE3NDU7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG59XHJcbiJdfQ== */\"","import { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'file-upload',\r\n    templateUrl: './file-upload.component.html',\r\n    styleUrls: ['./file-upload.component.css']\r\n})\r\n\r\nexport class FileUploadComponent implements OnInit {\r\n    public message: string;\r\n    public progress: number;\r\n    @Output() public onUploadFInished = new EventEmitter();\r\n\r\n    // Inject service \r\n    constructor(private http: HttpClient) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    public uploadFile = (files) => {\r\n        if (files.length === 0) return;\r\n\r\n        let fileToUpload = <File>files[0];\r\n        const formData = new FormData();\r\n        formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n        this.http.post('https://localhost:44304/api/fileupload', formData, { reportProgress: true, observe: 'events' })\r\n            .subscribe(event => {\r\n                if (event.type === HttpEventType.UploadProgress) {\r\n                    this.progress = Math.round(100 * event.loaded / event.total);\r\n                }\r\n                else if (event.type === HttpEventType.Response) {\r\n                    this.message = 'Upload success.';\r\n                    this.onUploadFInished.emit(event.body);\r\n                }\r\n            });\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}